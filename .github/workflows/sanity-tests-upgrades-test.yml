---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Upgrade Test

on:
  pull_request:
    branches:
      - main
      - release-*

  workflow_dispatch:

#  pull_request_review_comment:
#    types: [created]  # Run on PR review comment "sanity-tests"
#  schedule:
#    - cron: "0 0 * * *" # Run every day at midnight
#  workflow_dispatch:  # Run on manual trigger
#    inputs:
#      run-sanity-tests:
#        description: 'Run sanity tests'
#       required: true
#        default: 'false'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  upgrade-tests:
    permissions:
      contents: read
    name: Deploy Kind Orchestrator Upgrade Infra charts and Test
    if: |
      github.event_name != 'pull_request_review_comment' || 
      (github.event.comment.body && contains(github.event.comment.body, 'sanity-tests'))
    runs-on: ubuntu-24.04-16core-64GB
    timeout-minutes: 90
    env:
      ORCH_DEFAULT_PASSWORD: ${{ secrets.ORCH_DEFAULT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: open-edge-platform/edge-manageability-framework
          token: ${{ secrets.SYS_ORCH_GITHUB }}

      - name: Set up git credentials
        shell: bash
        run: |
          git config --global url."https://${{ secrets.SYS_ORCH_GITHUB }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main

      - name: Get current git hash of the infra-charts PR
        id: get-git-hash-charts
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "GIT_HASH_CHARTS=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
          else
            echo "GIT_HASH_CHARTS=${{ github.sha }}" >> "$GITHUB_ENV"
          fi

      - name: Print current git hash of the infra-charts PR
        run: echo "Current infra-charts git hash is ${{ env.GIT_HASH_CHARTS }}"

      - name: Set custom emf deployment with branch dev/infra-charts-upgr-test
        id: new-emf-branch
        env:
          INFRA_CHARTS_REV: ${{ env.GIT_HASH_CHARTS }}
          GIT_USER: "git"
          GIT_TOKEN: ${{ secrets.SYS_ORCH_GITHUB }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch
          git checkout v3.0.0
          git checkout -b dev/infra-charts-upgr-test-${INFRA_CHARTS_REV}

          sed -i 's/^mage 1\.14\.0$/mage 1.15.0/' .tool-versions
          sed -i '/var githubRepos = \[\]/a\    "https://github.com/open-edge-platform/infra-charts",' mage/Magefile.go

          git commit -a -m "Custom infra-charts PR ${INFRA_CHARTS_REV}"
          git push origin dev/infra-charts-upgr-test-${INFRA_CHARTS_REV}

      - name: Get current git hash of the emf PR
        id: get-git-hash-deploy
        run: echo "GIT_HASH_DEPLOY=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Print current git hash of the emf PR
        run: echo "Current emf git hash is ${{ env.GIT_HASH_DEPLOY }}"

      - name: Deploy Orchestrator
        id: deploy-orch
        env:
          GIT_USER: "git"
          GIT_TOKEN: ${{ secrets.SYS_ORCH_GITHUB }}
          EDGE_MANAGEABILITY_FRAMEWORK_REV: ${{ env.GIT_HASH_DEPLOY }}
          DOCKERHUB_TOKEN: ${{ secrets.SYS_DOCKERHUB_RO }}
          DOCKERHUB_USERNAME: ${{ secrets.SYS_DOCKERHUB_USERNAME }}
        run: |
          set +x
          echo "Starting to deploy Orchestrator..."
          mage deploy:kindAll
          echo "Orchestrator deployment done!"
          echo "Root App Status:"
          kubectl -n dev get applications root-app -o yaml
          
          echo "Adding Argo Github Repos..."
          mage argo:login
          mage argo:addGithubRepos

      - name: Verify Kind Deployment
        id: verify-emf-deployment
        timeout-minutes: 25
        run: |
          echo "Starting to verify Orchestrator deployment..."
          mage deploy:waitUntilComplete
          echo "Prints pods status..."
          kubectl get pods -A
          echo "Orchestrator deployment verified!"
          mage router:stop router:start
          echo "Router restarted"

      - name: Upgrade emf deployment with branch dev/infra-charts-upgr-test
        id: customize-charts-from-branch
        env:
          INFRA_CHARTS_REV: ${{ env.GIT_HASH_CHARTS }}
          GIT_USER: "git"
          GIT_TOKEN: ${{ secrets.SYS_ORCH_GITHUB }}
          EDGE_MANAGEABILITY_FRAMEWORK_REV: ${{ env.GIT_HASH_DEPLOY }}
          DOCKERHUB_TOKEN: ${{ secrets.SYS_DOCKERHUB_RO }}
          DOCKERHUB_USERNAME: ${{ secrets.SYS_DOCKERHUB_USERNAME }}
        run: |

          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Replaces +/targetRevision: with the current git hash of the infra-charts PR
          sed -i "s/targetRevision: [a-zA-Z0-9.]\+/targetRevision: ${INFRA_CHARTS_REV}/" argocd/applications/templates/infra-core.yaml
          sed -i "s/targetRevision: [a-zA-Z0-9.]\+/targetRevision: ${INFRA_CHARTS_REV}/" argocd/applications/templates/infra-managers.yaml
          sed -i "s/targetRevision: [a-zA-Z0-9.]\+/targetRevision: ${INFRA_CHARTS_REV}/" argocd/applications/templates/infra-onboarding.yaml
          sed -i "s/targetRevision: [a-zA-Z0-9.]\+/targetRevision: ${INFRA_CHARTS_REV}/" argocd/applications/templates/infra-external.yaml

          # Replaces chart: infra/charts/{{$appName}} with path: {{$appName}}
          sed -i 's|chart: infra/charts/{{$appName}}|path: {{$appName}}|g' argocd/applications/templates/infra-core.yaml
          sed -i 's|chart: infra/charts/{{$appName}}|path: {{$appName}}|g' argocd/applications/templates/infra-managers.yaml
          sed -i 's|chart: infra/charts/{{$appName}}|path: {{$appName}}|g' argocd/applications/templates/infra-onboarding.yaml
          sed -i 's|chart: infra/charts/{{$appName}}|path: {{$appName}}|g' argocd/applications/templates/infra-external.yaml

          # Replaces repoURL with git URL of infra-charts repository
          sed -i 's|repoURL: {{ required "A valid chartRepoURL entry required!" .Values.argo.chartRepoURL }}|repoURL: https://github.com/open-edge-platform/infra-charts.git|g' argocd/applications/templates/infra-core.yaml
          sed -i 's|repoURL: {{ required "A valid chartRepoURL entry required!" .Values.argo.chartRepoURL }}|repoURL: https://github.com/open-edge-platform/infra-charts.git|g' argocd/applications/templates/infra-managers.yaml
          sed -i 's|repoURL: {{ required "A valid chartRepoURL entry required!" .Values.argo.chartRepoURL }}|repoURL: https://github.com/open-edge-platform/infra-charts.git|g' argocd/applications/templates/infra-onboarding.yaml
          sed -i 's|repoURL: {{ required "A valid chartRepoURL entry required!" .Values.argo.chartRepoURL }}|repoURL: https://github.com/open-edge-platform/infra-charts.git|g' argocd/applications/templates/infra-external.yaml

          git commit -a -m "Upgrade EIM infra-charts-upgr-test PR ${INFRA_CHARTS_REV}"
          git push origin dev/infra-charts-upgr-test-${INFRA_CHARTS_REV}

          echo "Apply updates"
          mage deploy:orchLocal dev
          sleep 1m
          echo "Sync applications..."
          argocd app sync dev/infra-managers dev/infra-core dev/infra-external dev/infra-onboarding --grpc-web
          echo "Orchestrator upgrade done!"
    

      - name: Verify Kind Deployment
        id: verify-emf-after-upgrade-kubectl-2
        timeout-minutes: 10
        run: |
          echo "Verify deployment..."     
          mage deploy:waitUntilComplete
          echo "Prints status of pods..."
          kubectl get pods -A
          echo "Root App Status:"
          kubectl -n dev get applications root-app -o yaml
          echo "Orchestrator upgrade verified!"

      - name: Setup Test environment
        shell: bash
        run: |
          sudo awk -i inplace '/BEGIN ORCH DEVELOPMENT HOSTS/,/END ORCH DEVELOPMENT HOSTS/ { next } 1' /etc/hosts
          sudo awk -i inplace '/BEGIN ORCH SRE DEVELOPMENT HOST/,/END ORCH SRE DEVELOPMENT HOST/ { next } 1' /etc/hosts
          mage gen:hostfileTraefik | sudo tee -a /etc/hosts > /dev/null
          echo "Updated Hostfile entries!"
          mage gen:orchCa deploy:orchCa

      - name: Setup users and project/org
        shell: bash
        run: |
          mage tenantUtils:createDefaultMtSetup
          echo "Orch org/project/users created!"
          echo "Project uID:"
          kubectl get projects.project -o json | jq -r ".items[0].status.projectStatus.uID"

      - name: Deploy edge node
        shell: bash
        run: |
          mage devUtils:deployEnic 1 dev
          mage devUtils:registerEnic enic-0
          mage devUtils:provisionEnic enic-0
          sleep 5
          mage devUtils:WaitForEnic

      - name: Get diagnostic information
        id: diagnostic-info
        if: ${{ always() && steps.deploy-orch.conclusion == 'success' }}
        run: |
          kubectl get pods -o wide -A | tee pods-list.txt
          kubectl describe pods -A | tee pods-describe.txt
          mage logutils:collectArgoDiags | tee argo-diag.txt
          kubectl get applications -o yaml -A | tee argocd-applications.yaml

      - name: Upload diagnostic artifacts
        if: ${{ always() && steps.diagnostic-info.conclusion == 'success' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pods-apps-logs
          path: |
            argo-diag.txt
            pods-describe.txt
            pods-list.txt
            argocd-applications.yaml
  
      - name: Clean custom branch dev/infra-charts-upgr-test
        if: ${{ always() && steps.new-emf-branch.conclusion == 'success' }}
        env:
          INFRA_CHARTS_REV: ${{ env.GIT_HASH_CHARTS }}
          GIT_USER: "git"
          GIT_TOKEN: ${{ secrets.SYS_ORCH_GITHUB }}
        run: |
          set +x
          echo "Deleting branch dev/infra-charts-upgr-test-${INFRA_CHARTS_REV}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push origin --delete dev/infra-charts-upgr-test-${INFRA_CHARTS_REV}
